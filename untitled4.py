# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-qWuR2vMKzM2u1PjudJErQ3Fz7L6hwiO
"""

# ЗАВДАННЯ 1.1: створити датафрейм з списку 10-ти простих чисел
df1_1 = ...

import pandas as pd

# список простих чисел
primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]

# створення датафрейму
df1_1 = pd.DataFrame(primes, columns=['Просте число'])

# виведення датафрейму на екран
print(df1_1)

# ЗАВДАННЯ 1.2: створити датафрейм з матриці 5х6 випадкових чисел з плаваючою точкою
df1_2 = ...

import numpy as np
import pandas as pd

# створення матриці випадкових чисел
matrix = np.random.rand(5, 6)

# створення датафрейму з матриці
df1_2 = pd.DataFrame(matrix)

# виведення датафрейму на екран
print(df1_2)

ЗАВДАННЯ 1.3: створити  DataFrame наступного вигляду:

ім'я	прізвище	рік народження	телефон
Петро	Петров	2000	222-222-2222
Іван	Іванов	2002	333-333-3333
Степан	Степанов	2001	444-444-4444

import pandas as pd

data = {
    'ім\'я': ['Петро', 'Іван', 'Степан'],
    'прізвище': ['Петров', 'Іванов', 'Степанов'],
    'рік народження': [2000, 2002, 2001],
    'телефон': ['222-222-2222', '333-333-3333', '444-444-4444']
}

df1_3 = pd.DataFrame(data)

print(df1_3)

# ЗАВДАННЯ 2.1: вивести характеристики датасету `titanic`

import seaborn as sns

titanic = sns.load_dataset('titanic')
print(titanic.describe())

# ЗАВДАННЯ 2.2: вивести статистичні параметри полів `Age` та `Fare` датасету `titanic

import seaborn as sns

titanic = sns.load_dataset('titanic')
print(titanic[['age', 'fare']].describe())

# ЗАВДАННЯ 2.3: пірахувати кількість записів в яких заповнені усі показчики

import seaborn as sns

titanic = sns.load_dataset('titanic')
complete_records = titanic.dropna().count()
print(complete_records)

# ЗАВДАННЯ 2.4: пірахувати кількість виживших (survived=1) пасажирів жиночої статі (Sex=`female`)

import seaborn as sns

titanic = sns.load_dataset('titanic')
survived_female = titanic.loc[(titanic['survived'] == 1) & (titanic['sex'] == 'female')].count()
print(survived_female)

# ЗАВДАННЯ 3.1: створити датафрейм з словника d
d = {
    "ім'я"    : ["Петя", "Вася", "Галя"],
    "вік"     : [22, 200 , 21],
    "рейтинг" : ["10", "3", "2"]
}
df = ...

import pandas as pd

d = {
    "ім'я"    : ["Петя", "Вася", "Галя"],
    "вік"     : [22, 200 , 21],
    "рейтинг" : ["10", "3", "2"]
}

df = pd.DataFrame(data=d)

# ЗАВДАННЯ 3.2: додати до `df` стовбчик з показчиком 
# `рік завершення школи` = [2018, 2020, 200]
...
print(df)

df['рік завершення школи'] = [2018, 2020, 200]

# ЗАВДАННЯ 3.4: вивести з датасету `titanic` останні 10 записів

titanic.tail(10)

# ЗАВДАННЯ 3.5: вибрати з датасету `titanic` рядки з пасажирами чоловічої статі віком 
# від 20 до 30 років, які подорожували 2 класом

import pandas as pd

# завантаження датасету titanic з csv-файлу
titanic = pd.read_csv("titanic.csv")

# вибірка рядків за допомогою loc[]
selected_rows = titanic.loc[
    (titanic["Sex"] == "male") & 
    (titanic["Age"] >= 20) & 
    (titanic["Age"] <= 30) & 
    (titanic["Pclass"] == 2)
]

print(selected_rows)

# ЗАВДАННЯ 3.6: видалити з датасету `titanic` рядки з пасажирами у яких відсутня
# вартість (fare) квітка
df = ...
df

# Завдання 3.6: видалити з датасету `titanic` рядки з пасажирами у яких відсутня вартість (fare) квітка
df = titanic.dropna(subset=['Fare'])

# ЗАВДАННЯ 3.7: підрахувати середню вартість квитка у каютах 1-го класу
avg_price = ...
print(avg_price)

avg_price = titanic[titanic['Pclass'] == 1]['Fare'].mean()
print(avg_price)

# ЗАВДАННЯ 4.1: отримати відомості про максимальний вік жінок та чоловіків
max_age = ...
print(max_age)

max_age = titanic.groupby('Sex')['Age'].max()
print(max_age)